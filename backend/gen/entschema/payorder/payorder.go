// Code generated by entc, DO NOT EDIT.

package payorder

import (
	"time"
)

const (
	// Label holds the string label denoting the payorder type in the database.
	Label = "pay_order"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUID holds the string denoting the uid field in the database.
	FieldUID = "uid"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeactivatedAt holds the string denoting the deactivated_at field in the database.
	FieldDeactivatedAt = "deactivated_at"
	// FieldOrderNumber holds the string denoting the order_number field in the database.
	FieldOrderNumber = "order_number"
	// FieldOrderType holds the string denoting the order_type field in the database.
	FieldOrderType = "order_type"
	// FieldUserUID holds the string denoting the user_uid field in the database.
	FieldUserUID = "user_uid"
	// FieldPayMethod holds the string denoting the pay_method field in the database.
	FieldPayMethod = "pay_method"
	// FieldPaymentAmount holds the string denoting the payment_amount field in the database.
	FieldPaymentAmount = "payment_amount"
	// FieldTotalPrice holds the string denoting the total_price field in the database.
	FieldTotalPrice = "total_price"
	// FieldRechargeRecord holds the string denoting the recharge_record field in the database.
	FieldRechargeRecord = "recharge_record"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldTransactionNumber holds the string denoting the transaction_number field in the database.
	FieldTransactionNumber = "transaction_number"
	// FieldThirdpartyNumber holds the string denoting the thirdparty_number field in the database.
	FieldThirdpartyNumber = "thirdparty_number"
	// FieldMchID holds the string denoting the mch_id field in the database.
	FieldMchID = "mch_id"
	// FieldOpenID holds the string denoting the open_id field in the database.
	FieldOpenID = "open_id"
	// FieldMemberExpired holds the string denoting the member_expired field in the database.
	FieldMemberExpired = "member_expired"
	// FieldCancelEvent holds the string denoting the cancel_event field in the database.
	FieldCancelEvent = "cancel_event"
	// Table holds the table name of the payorder in the database.
	Table = "pay_order"
)

// Columns holds all SQL columns for payorder fields.
var Columns = []string{
	FieldID,
	FieldUID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeactivatedAt,
	FieldOrderNumber,
	FieldOrderType,
	FieldUserUID,
	FieldPayMethod,
	FieldPaymentAmount,
	FieldTotalPrice,
	FieldRechargeRecord,
	FieldStatus,
	FieldTransactionNumber,
	FieldThirdpartyNumber,
	FieldMchID,
	FieldOpenID,
	FieldMemberExpired,
	FieldCancelEvent,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultUID holds the default value on creation for the "uid" field.
	DefaultUID func() string
	// UIDValidator is a validator for the "uid" field. It is called by the builders before save.
	UIDValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// StatusValidator is a validator for the "status" field. It is called by the builders before save.
	StatusValidator func(string) error
	// CancelEventValidator is a validator for the "cancel_event" field. It is called by the builders before save.
	CancelEventValidator func(string) error
)
